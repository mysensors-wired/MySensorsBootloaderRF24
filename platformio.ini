[platformio]
default_envs = DIN_Relay_v2
src_dir  = .

[common]
RS485_BAUDRATE = 38400
platform = atmelavr
board = atmega328pb
board_build.f_cpu = 8000000L
board_fuses.lfuse = 0xE2   ; std=E2   with clock out on Port B0=A2
board_fuses.hfuse = 0xD0
board_fuses.efuse = 0xFD
board_upload.maximum_size = 2048
;upload_speed = 9600
upload_port = usb
monitor_port = COM6
monitor_speed = 9600
upload_protocol = stk500v2
; each flag in a new line
upload_flags =
    -Pusb 

extra_scripts = extra_linker_script.py

build_flags =
    ;-save-temps
    -funsigned-char 
    -funsigned-bitfields 
    -fno-tree-loop-optimize
    -DMY_RADIO_RS485
    -DBAUD_RATE=${common.RS485_BAUDRATE}
    -DBAUD=${common.RS485_BAUDRATE}
    -DRS485_COLLISION_DETECTION
    -Os
    -fpack-struct 
    -fshort-enums 
    -mrelax 
    -Wextra 
    -Wundef 
    -pedantic 
    -std=gnu11
    -c 
    -MD 
    -MP
    -Wl,-s 
    -Wl,-static 
    -Wl,-Map=OutputFileName.map
    -Wl,--start-group 
    -Wl,--end-group 
    -Wl,--gc-sections 
    -Wl,-section-start=.text=0x7800  



build_unflags = 
    -std=gnu11
    -fno-fat-lto-objects 
    -flto
    -DPLATFORMIO=40003
    -DARDUINO_ARCH_AVR
    -DARDUINO_AVR_ATmega328P
    -DARDUINO=10805
    -fuse-linker-plugin
    -lm

[env:DIN_Relay_v1]
extends = common
build_flags =
    ${common.build_flags}
    -DRELAY_BOARD_V1_0

[env:DIN_Relay_v2]
extends = common
build_flags =
    ${common.build_flags}
    -DRELAY_BOARD_V2_0

[env:Wallnode_v1]
extends = common
build_flags =
    ${common.build_flags}
    -DRELAY_WALLNODE_V1_0

[env:Wallnode_v2]  ; same as Wallnode_v1
extends = common
build_flags =
    ${common.build_flags}
    -DRELAY_WALLNODE_V1_0

[env:RS_Node_v1]
extends = common
board = atmega328p   ; just 328P, not 328PB!
build_flags =
    ${common.build_flags}
    -DRSNode_V1_0


[env:DIN_RS_v1]
extends = common
build_flags =
    ${common.build_flags}
    -DDIN_RS_V1_0    